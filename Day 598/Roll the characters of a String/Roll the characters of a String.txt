Given a string s containing lowercase alphabets and an 
array roll where roll[i] represents rolling the first 
roll[i] characters in the string, the task is to apply 
every roll[i] on the string and return the final string. 

Rolling means increasing the ASCII value of the character; 
for example, rolling z would result in a, rolling b would 
result in c, etc.


Examples:

Input: s = "bca", roll[] = [1, 2, 3]

Output: eeb

Explanation: arr[0] = 1 means roll first character of string -> cca 
arr[1] = 2 means roll first two characters of string -> dda
arr[2] = 3 means roll first three characters of string -> eeb
So final ans is "eeb". 


Input: s = "zcza", roll[] = [1, 1, 3, 4]

Output: debb


Constraints:

1 ≤ s.size() ≤ 10^6
1 ≤ roll.size() ≤ 10^6
1 ≤ roll[i] ≤ s.size()