Given a linked list, you have 
to perform the following task:

Extract the alternative nodes 
starting from the second node.

Reverse the extracted list.

Append the extracted list at 
the end of the original list.

Note: Try to solve the problem 
without using any extra memory.


Examples:

Input: LinkedList: 10->4->9->1->3->5->9->4

Output: 10->9->3->9->4->5->1->4

Explanation: Alternative nodes in 
the given linked list are 4,1,5,4. 

Reversing the alternative nodes 
from the given list, and then 
appending them to the end of the 
list results in a list 
10->9->3->9->4->5->1->4.


Input: LinkedList: 1->2->3->4->5

Output: 1->3->5->4->2 

Explanation: Alternative nodes in the 
given linked list are 2 and 4. 

Reversing the alternative nodes from 
the given list, and then appending them 
to the end of the list results in a list 
of 1->3->5->4->2.


Expected Time Complexity: O(n)
Expected Space Complexity: O(1)


Constraints:

1 <= size of linked list <= 10^6
0 <= Node_value <= 10^9