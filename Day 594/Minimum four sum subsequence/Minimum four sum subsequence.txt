You are given an array arr[] of positive integers. 

Your task is to find the minimum sum of a subsequence 
such that the subsequence includes at least one element 
from every group of four consecutive elements in the 
array.


Examples:

Input: arr[] = [1, 2, 3, 4, 5, 6, 7, 8]

Output: 6

Explanation: 6 is sum of output subsequence {1, 5}. 

Following 4 length subarrays are possible (1, 2, 3, 4), 
(2, 3, 4, 5), (3, 4, 5, 6), (4, 5, 6, 7), (5, 6, 7, 8)
Here, Our subsequence {1, 5} has an element from all 
above groups of four consecutive elements.


Input: arr[] = [2, 1, 3]

Output: 1 

Explanation: The size of arr is less 
than 4, so the subsequence is {1}.


Input: arr[] = [1, 2, 3, 3, 4, 5, 6, 1]

Output: 4

Explanation: The subsequence is {3, 1}. 

Here we consider second three.


Expected Time Complexity: O(n)
Expected Auxiliary Space: O(n)


Constraints:

1<=arr.size()<=10^6
1<=arr[i]<=10^5