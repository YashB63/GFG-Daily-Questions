Given a binary tree in which each 
node element contains a number. 

Find the maximum possible path sum from 
one special node to another special node.

Note: Here special node is a node that is 
connected to exactly one different node.


Examples:

Input: root = [3, 4, 5, -10, 4, N, N]
                         
Output: 16

Explanation: Maximum Sum lies 
between special node 4 and 5. 

4 + 4 + 3 + 5 = 16.


Input: root = [-15, 5, 6, -8, 
1, 3, 9, 2, -3, 0, 4, -1, 10]

Output:  27

Explanation: The maximum possible sum 
from one special node to another is 
(3 + 6 + 9 + 0 + -1 + 10 = 27)


Input: root = [3, 4, 1, -10, 4] 
                         
Output: 12

Explanation: Maximum Sum lies between 
special node 4 and 5. 4 + 4 + 3 + 1 = 12.


Constraints:

2  ≤  number of nodes  ≤  10^4
-10^3  ≤ node->data ≤ 10^3