You are given two strings, s1 and s2. 

Your task is to find the smallest substring 
in s1 such that s2 appears as a subsequence 
within that substring.

The characters of s2 must appear in the 
same sequence within the substring of s1.

If there are multiple valid substrings 
of the same minimum length, return the 
one that appears first in s1.

If no such substring exists, 
return an empty string.

Note: Both the strings contain 
only lowercase letters.


Examples:

Input: s1 = "geeksforgeeks", s2 = "eksrg"

Output: "eksforg"

Explanation: "eksforg" satisfies 
all required conditions. 

s2 is its subsequence and it is 
longest and leftmost among all 
possible valid substrings of s1.


Input: s1 = "abcdebdde", s2 = "bde" 

Output: "bcde"

Explanation:  "bcde" is the answer and 
"deb" is not a smaller window because 
the elements in the window must occur 
in order.


Input: s1 = "ad", s2 = "b" 

Output: ""

Explanation: There is no substring exists.


Constraints:
1 <= s1.length <= 10^4
1 <= s2.length <= 50