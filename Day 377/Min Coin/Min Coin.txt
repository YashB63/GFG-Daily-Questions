Given a list of coins of distinct denominations 
arr and the total amount of money. 

Find the minimum number of coins 
required to make up that amount. 

Output -1 if that money cannot 
be made up using given coins.

You may assume that there are infinite 
numbers of coins of each type.
 

Example 1:

Input: arr = [1, 2, 5], amount = 11

Output: 3

Explanation: 2*5 + 1 = 11. So taking 2 
denominations of 5 and 1 denomination of  
1, one can make 11.


Example 2:

Input: arr = [2, 6], amount = 7

Output: -1

Explanation: Not possible to make 7 using 
denominations 2 and 6.
 

Your Task:

You don't need to read or print anything. 

Your task is to complete the function MinCoin() 
which takes a list of denominations and amounts 
as input parameters and returns a minimum number 
of coins to make up the amount. 

If not possible returns -1.
 

Expected Time Complexity: O(n*amount)
Expected Space Complexity: O(amount)
 

Constraints:

1 <= number of distinct denominations <= 100
1 <= amount,arri <= 10^4