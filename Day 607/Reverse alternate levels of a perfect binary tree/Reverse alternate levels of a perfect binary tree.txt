Given a complete binary tree, reverse 
the nodes present at alternate levels.


Examples:

Input: root = [1, 3, 2]
             1
           /   \
          3     2

Output:
             1
           /   \
          2     3

Explanation: Nodes at level 2 are reversed.


Input: root = [1, 2, 3, 42, 51, 63, 72
              1
           /     \
         2        3
       /  \      /     \
     42   51   63   72

Output:
              1
           /     \
         3        2
       /  \      /     \
     42   51   63   72

Explanation: Nodes at level 2 are reversed. 

Level 1 and 3 remain as it is.


Input: root = [1, 3, 4]
             1
           /   \
          3     4
Output:
             1
           /   \
          4     3

Explanation: Nodes at level 2 are reversed.

Note: If you click on Compile and Test the output will 
be the in-order traversal of the modified tree.


Constraints:

1 ≤ number of nodes ≤ 10^5
1 ≤ nodes->data ≤ 10^5