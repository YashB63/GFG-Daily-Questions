You are given an array arr[] of size N and Q queries. 

getSum(L,R):  return the sum of range [L,R]

updateValue(index,value): update arr[index] to value.

You need to calculate the answer for Type-1 queries 
and do the update in the segment tree for Type-2 
queries.

Note: 0-based indexing is used.


Example 1:

Input:
N = 6, Q = 3
arr[] = {1,3,5,7,9,11}
Queries = getSum(0,2)
          updateValue(3,17)
          getSum(0,5)

Output:
9
46

Explanation: There are 3 queries: 
Query 1: 1 + 3 + 5 = 9
Query 2: 7 changes to 17
Query 3: 1 + 3 + 5 + 17 + 9 + 11= 46


Your Task:

Complete the updateValue() and getSum() function. 

The formed segment tree is already provided 
in both the function as a function argument.

updateValue() processes Type-2 query and does 
the required update in the segment tree.

getSum() returns the answer for Type-1 query.


Expected Time Complexity: O(Q*Log(N)).
Expected Auxiliary Space: O(1).


Constraints:

1 <= N <= 10^5
1 <= Q <= 10^5
0 <= L, R, index <= N-1
1 <= arr[i], value <= 10^5


Example:

Input:
1
6 3
1 3 5 7 9 11
G 0 2
U 3 17
G 0 5

Output:
9
46

Explanation:
Testcase 1: There are 3 queries: 
                    Query 1 :  1 + 3 + 5 = 9
                    Query 2 :  7 changes to 17
                    Query 3 :  1 + 3 + 5 + 17 + 9 + 11= 46