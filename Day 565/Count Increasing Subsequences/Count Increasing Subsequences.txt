Given an array arr[] consisting of digits 
(where each digit ranges from 0 to 9), 
the task is to count all possible 
subsequences within the array where 
each digit in the subsequence is 
strictly greater than the previous 
digit. 

The final count should be 
returned modulo 10^9+7.


Examples:

Input: arr[] = [1, 2, 3, 4]

Output: 15

Explanation: There are total increasing subsequences 
{1}, {2}, {3}, {4}, {1,2}, {1,3}, {1,4}, {2,3}, {2,4}, 
{3,4}, {1,2,3}, {1,2,4}, {1,3,4}, {2,3,4}, {1,2,3,4}.


Input: arr[] = [4, 3, 6, 5]

Output: 8

Explanation: Sub-sequences are {4}, {3}, 
{6}, {5}, {4,6}, {4,5}, {3,6}, {3,5}.


Input: arr[] = [3, 2, 4, 5, 4]

Output: 14

Explanation: Sub-sequences are {3}, {2}, {4}, 
{3,4}, {2,4}, {5}, {3,5}, {2,5}, {4,5}, 
{3,2,5}, {3,4,5}, {4}, {3,4}, {2,4}.


Expected Time Complexity: O(n)
Expected Auxiliary Space: O(1)


Constraints:

1 ≤ arr.size() ≤ 10^6
1 ≤ arr[i] ≤ 9